// ignore: unused_import
import 'package:intl/intl.dart' as intl;
import 'app_localizations.dart';

// ignore_for_file: type=lint

/// The translations for Hindi (`hi`).
class AppLocalizationsHi extends AppLocalizations {
  AppLocalizationsHi([String locale = 'hi']) : super(locale);

  @override
  String get marketWatcher => 'рдорд╛рд░реНрдХреЗрдЯ рд╡реЙрдЪрд░';

  @override
  String get instantMarketAlarms => 'рддреБрд░рдВрдд рдмрд╛рдЬрд╛рд░ рдЕрд▓рд╛рд░реНрдо';

  @override
  String get continueWithGoogle => 'Google рд╕реЗ рдЬрд╛рд░реА рд░рдЦреЗрдВ';

  @override
  String get followedAlarms => 'рдЕрдиреБрд╕рд░рдг рдХрд┐рдП рдЧрдП рдЕрд▓рд╛рд░реНрдо';

  @override
  String get noAlarmsYet => 'рдЕрднреА рддрдХ рдХреЛрдИ рдЕрд▓рд╛рд░реНрдо рд╕реЗрдЯ рдирд╣реАрдВ рдХрд┐рдпрд╛ рдЧрдпрд╛ рд╣реИред';

  @override
  String get setAlarm => 'рд╕реЗрдЯ рдХрд░реЗрдВ';

  @override
  String get watchMarkets => 'рдмрд╛рдЬрд╛рд░ рджреЗрдЦреЗрдВ';

  @override
  String get settings => 'рд╕реЗрдЯрд┐рдВрдЧреНрд╕';

  @override
  String get general => 'рд╕рд╛рдорд╛рдиреНрдп';

  @override
  String get applicationLanguage => 'рдПрдкреНрд▓рд┐рдХреЗрд╢рди рднрд╛рд╖рд╛';

  @override
  String get notifications => 'рд╕реВрдЪрдирд╛рдПрдБ';

  @override
  String get forAllAlarms => 'рд╕рднреА рдЕрд▓рд╛рд░реНрдо рдХреЗ рд▓рд┐рдП';

  @override
  String get account => 'рдЦрд╛рддрд╛';

  @override
  String get signOut => 'рд╕рд╛рдЗрди рдЖрдЙрдЯ';

  @override
  String get language => 'рд╣рд┐рдиреНрджреА';

  @override
  String get selectLanguage => 'рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ';

  @override
  String get cancel => 'рд░рджреНрдж рдХрд░реЗрдВ';

  @override
  String get delete => 'рд╣рдЯрд╛рдПрдБ';

  @override
  String get edit => 'рд╕рдВрдкрд╛рджрд┐рдд рдХрд░реЗрдВ';

  @override
  String get save => 'рд╕рд╣реЗрдЬреЗрдВ';

  @override
  String get symbol => 'рдкреНрд░рддреАрдХ';

  @override
  String get name => 'рдирд╛рдо';

  @override
  String get price => 'рдореВрд▓реНрдп';

  @override
  String get noDataFound => 'рдХреЛрдИ рдбреЗрдЯрд╛ рдирд╣реАрдВ рдорд┐рд▓рд╛';

  @override
  String get theAlarmHasNotBeenSetYet => 'рдЕрд▓рд╛рд░реНрдо рдЕрднреА рддрдХ рд╕реЗрдЯ рдирд╣реАрдВ рдХрд┐рдпрд╛ рдЧрдпрд╛ рд╣реИред';

  @override
  String get selectMarket => 'рдмрд╛рдЬрд╛рд░ рдЪреБрдиреЗрдВ';

  @override
  String get selectSymbol => 'рдкреНрд░рддреАрдХ рдЪреБрдиреЗрдВ';

  @override
  String get selectChangePercent => 'рдмрджрд▓рд╛рд╡ % рдЪреБрдиреЗрдВ';

  @override
  String get editAlarm => 'рдЕрд▓рд╛рд░реНрдо рд╕рдВрдкрд╛рджрд┐рдд рдХрд░реЗрдВ';

  @override
  String get watchMarket => 'рдмрд╛рдЬрд╛рд░ рджреЗрдЦреЗрдВ';

  @override
  String get signInWithGoogle => 'Google рд╕реЗ рд╕рд╛рдЗрди рдЗрди рдХрд░реЗрдВ';

  @override
  String get crypto => 'рдХреНрд░рд┐рдкреНрдЯреЛ';

  @override
  String get metals => 'рдзрд╛рддреБрдПрдБ';

  @override
  String get noData => 'рдХреЛрдИ рдбреЗрдЯрд╛ рдирд╣реАрдВ';

  @override
  String get pleaseSignInFirst => 'рдХреГрдкрдпрд╛ рдкрд╣рд▓реЗ рд╕рд╛рдЗрди рдЗрди рдХрд░реЗрдВ';

  @override
  String get couldNotGetNotificationToken =>
      'рд╕реВрдЪрдирд╛ рдЯреЛрдХрди рдкреНрд░рд╛рдкреНрдд рдирд╣реАрдВ рд╣реЛ рд╕рдХрд╛ред рдХреГрдкрдпрд╛ рдкреБрдирдГ рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВред';

  @override
  String alarmAlreadyExists(Object displaySymbol, Object market) {
    return '$market рдореЗрдВ $displaySymbol рдХреЗ рд▓рд┐рдП рдЕрд▓рд╛рд░реНрдо рдкрд╣рд▓реЗ рд╕реЗ рдореМрдЬреВрдж рд╣реИ';
  }

  @override
  String marketSymbolsCouldNotBeLoaded(Object market) {
    return '$market рдкреНрд░рддреАрдХ рд▓реЛрдб рдирд╣реАрдВ рдХрд┐рдП рдЬрд╛ рд╕рдХреЗред';
  }

  @override
  String get noMarketDataFound => 'рдХреЛрдИ рдмрд╛рдЬрд╛рд░ рдбреЗрдЯрд╛ рдирд╣реАрдВ рдорд┐рд▓рд╛';

  @override
  String get watchMarketChart => 'рдмрд╛рдЬрд╛рд░ рджреЗрдЦреЗрдВ ЁЯУИ';

  @override
  String get gram => 'рдЧреНрд░рд╛рдо';

  @override
  String get metalGold => 'рд╕реЛрдирд╛';

  @override
  String get metalSilver => 'рдЪрд╛рдВрджреА';

  @override
  String get metalCopper => 'рддрд╛рдБрдмрд╛';

  @override
  String get subscriptionPlans => 'рд╕рджрд╕реНрдпрддрд╛ рдпреЛрдЬрдирд╛рдПрдВ';

  @override
  String get alarms => 'рдЕрд▓рд╛рд░реНрдо';

  @override
  String get markets => 'рдмрд╛рдЬрд╛рд░';

  @override
  String get subscriptions => 'рд╕рджрд╕реНрдпрддрд╛рдПрдБ';

  @override
  String get bestOffer => 'рд╕рдмрд╕реЗ рдЕрдЪреНрдЫрд╛ рдкреНрд░рд╕реНрддрд╛рд╡';

  @override
  String get free => 'рдирд┐: рд╢реБрд▓реНрдХ';

  @override
  String get featureCheck10Min => '10 рдорд┐рдирдЯ рдЬрд╛рдВрдЪ рдЕрдВрддрд░рд╛рд▓';

  @override
  String get feature5Alarms => '5 рдЕрд▓рд╛рд░реНрдо рд╕реАрдорд╛';

  @override
  String get featureCheck3Min => '3 рдорд┐рдирдЯ рдЬрд╛рдВрдЪ рдЕрдВрддрд░рд╛рд▓';

  @override
  String get feature20Alarms => '20 рдЕрд▓рд╛рд░реНрдо рд╕реАрдорд╛';

  @override
  String get featureNoAds => 'рд╡рд┐рдЬреНрдЮрд╛рдкрди-рдореБрдХреНрдд';

  @override
  String get featureCheck1Min => '1 Min Check Interval';

  @override
  String get featureUnlimitedAlarms => 'рдЕрд╕реАрдорд┐рдд рдЕрд▓рд╛рд░реНрдо';

  @override
  String get featurePrioritySupport => 'рдкреНрд░рд╛рдердорд┐рдХрддрд╛ рд╕рд╣рд╛рдпрддрд╛';

  @override
  String get currentPlan => 'рд╡рд░реНрддрдорд╛рди рдпреЛрдЬрдирд╛';

  @override
  String get upgrade => 'рдЕрдкрдЧреНрд░реЗрдб';

  @override
  String get downgrade => 'рдбрд╛рдЙрдирдЧреНрд░реЗрдб';

  @override
  String get anErrorOccurred => 'рдПрдХ рддреНрд░реБрдЯрд┐ рд╣реБрдИред рдХреГрдкрдпрд╛ рдкреБрди: рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВред';

  @override
  String get alarmLimitReached => 'рдЕрд▓рд╛рд░реНрдо рд╕реАрдорд╛ рддрдХ рдкрд╣реБрдВрдЪ рдЧрдпрд╛ рд╣реИ';

  @override
  String get upgradePlanForMoreAlarms =>
      'рдЕрдзрд┐рдХ рдЕрд▓рд╛рд░реНрдо рд╕реЗрдЯ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдХреГрдкрдпрд╛ рдЕрдкрдиреА рд╡рд░реНрддрдорд╛рди рдпреЛрдЬрдирд╛ рдХреЛ рдЕрдкрдЧреНрд░реЗрдб рдХрд░реЗрдВред';
}
